{"version":3,"sources":["services/context.js","services/api.js","keys.js","actions/index.js","components/movie/Movie.js","components/movie/MovieList.js","pages/Home.js","services/storage.js","components/Search.js","components/movie/MovieCollection.js","pages/Favorite.js","pages/Rate.js","pages/About.js","pages/Discover.js","pages/MovieIndividual.js","pages/SearchResult.js","routes.js","reducers/index.js","components/Header.js","components/Footer.js","services/thunk.js","App.js","serviceWorker.js","index.js"],"names":["React","api","a","baseURL","config","api_key","fetchMovies","listType","ref","payload","dateMovieA","moment","movieA","movieB","dateMovieB","dispatch","type","id","title","overview","poster_path","release_date","vote_average","className","src","alt","to","memo","movies","renderMovies","useCallback","props","key","selectItems","value","label","useContext","useState","moviesFilter","setLocalState","useEffect","name","onChange","data","e","options","getCollection","collection","JSON","localStorage","setItem","replaceProp","parseCollection","findIndexItem","o","withRouter","history","fullWidth","terms","setTerms","shouldFullWidth","flex","style","placeholder","aria-label","onClick","collectionType","movieCollection","useMemo","like","rating","moviesCollection","Promise","allRefs","process","yearsArray","currentYear","Date","index","years","yearLength","length","sortByList","genresList","fromYear","toYear","genres","sortBy","params","sort_by","with_genres","paramsStringify","arrayFormat","fetchDiscover","Array","genresGenerator","onSelectChange","isMulti","movieItem","getItem","initialLocalState","movieId","useParams","fetchMovie","htmlFor","searchTerms","path","component","Favorite","Rate","About","Discover","MovieIndividual","SearchResult","Home","action","movie","state","linkItems","link","text","pathname","location","data-toggle","data-target","aria-controls","aria-expanded","clsx","href","reducer","init","hookState","setHookState","useRef","getState","setState","reduce","initialState","useThunkReducer","Boolean","window","ReactDOM","document","navigator","registration"],"mappings":"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","file":"static/js/main.596d632e.chunk.js","sourcesContent":["import React from 'react';\n\nconst AppProvider = React.createContext();\n\nexport default AppProvider;\n","import axios from 'axios';\n\nimport { baseURL, secret } from '../keys';\n\nconst api = axios.create({\n  baseURL,\n});\n\napi.interceptors.request.use((config) => {\n  config.params = {\n    ...config.params,\n    api_key: secret,\n  };\n  return config;\n});\n\nexport default api;\n","const baseURL = 'https://api.themoviedb.org/3';\nconst secret = '7c298d49541bf3a98b56f841d998d0a3';\nconst maxResult = 12;\n\nexport { baseURL, secret, maxResult };\n","import qs from 'qs';\nimport moment from 'moment';\n\nimport api from '../services/api';\nimport { maxResult } from '../keys';\n\nconst FETCH_MOVIES = 'FETCH_MOVIES';\nconst FETCH_MOVIE = 'FETCH_MOVIE';\nconst FETCH_GENRES = 'FETCH_GENRES';\n\nconst fetchMovies = (listType) => async (dispatch) => {\n  const ref = (await api.get(`/movie/${listType}`)).data.results;\n\n  const payload = ref.sort((movieA, movieB) => {\n    const dateMovieA = moment(movieA.release_date);\n    const dateMovieB = moment(movieB.release_date);\n\n    return dateMovieB.diff(dateMovieA);\n  }).slice(0, maxResult);\n\n  dispatch({\n    type: FETCH_MOVIES,\n    payload,\n  });\n};\n\nconst fetchMovie = (movieId) => async (dispatch) => {\n  const ref = (await api.get(`/movie/${movieId}`)).data;\n\n  dispatch({\n    type: FETCH_MOVIE,\n    payload: ref,\n  });\n};\n\nconst fetchMoviesCollection = (moviesCollection) => async (dispatch) => {\n  const allRefs = await Promise.all(moviesCollection.map(async ({ id }) => {\n    const ref = (await api.get(`/movie/${id}`)).data;\n    return ref;\n  }));\n\n  dispatch({\n    type: FETCH_MOVIES,\n    payload: allRefs,\n  });\n};\n\nconst fetchGenres = () => async (dispatch) => {\n  const ref = (await api.get('/genre/movie/list')).data.genres;\n\n  dispatch({\n    type: FETCH_GENRES,\n    payload: ref,\n  });\n};\n\nconst fetchDiscover = (fromYear, toYear, genres, sortBy) => async (dispatch) => {\n  const params = {\n    'primary_release_date.gte': `${fromYear}-01-01`,\n    'primary_release_date.lte': `${toYear}-12-31`,\n    sort_by: sortBy,\n    ...(genres.length > 0 && { with_genres: genres }),\n  };\n\n  const paramsStringify = qs.stringify(params, { arrayFormat: 'comma' });\n\n  const ref = (await api.get(`/discover/movie?${paramsStringify}`)).data.results.slice(0, maxResult);\n\n  dispatch({\n    type: FETCH_MOVIES,\n    payload: ref,\n  });\n};\n\nconst searchTerms = (terms) => async (dispatch) => {\n  const ref = (await api.get(`/search/movie?query=${terms}`)).data.results;\n\n  dispatch({\n    type: FETCH_MOVIES,\n    payload: ref,\n  });\n};\n\nexport {\n  fetchMovies,\n  fetchMovie,\n  fetchMoviesCollection,\n  fetchGenres,\n  fetchDiscover,\n  searchTerms,\n  FETCH_MOVIES,\n  FETCH_MOVIE,\n  FETCH_GENRES,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Movie({\n  id, title, overview, poster_path, release_date, vote_average,\n}) {\n  return (\n    <div className=\"col-md-6 col-lg-4\">\n      <div className=\"card mb-4 shadow-sm\">\n        <img\n          src={poster_path ? `https://image.tmdb.org/t/p/w500/${poster_path}` : 'https://via.placeholder.com/500.png/343a40/fff'}\n          className=\"card-img-top poster\"\n          alt={title}\n        />\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{title}</h5>\n          <h6 className=\"card-subtitle mb-2 text-muted\">{release_date}</h6>\n          <p className=\"card-text\">\n            {overview.substring(0, 100)}\n              ...\n          </p>\n          <Link className=\"btn btn-primary\" to={`/movie/${id}`}>More Info</Link>\n        </div>\n        <div className=\"card-footer text-muted\">\n          <span>\n            Rate\n            {' '}\n            {vote_average}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Movie;\n","import React, { memo, useCallback } from 'react';\nimport Movie from './Movie';\n\nfunction MovieList({ movies }) {\n  const renderMovies = useCallback(\n    () => movies.map(({ id, ...props }) => (\n      <Movie key={id} id={id} {...props} />\n    )),\n    [movies],\n  );\n\n  return (\n    <div className=\"row\">\n      {renderMovies()}\n    </div>\n  );\n}\n\nexport default memo(MovieList);\n","import React, {\n  useEffect, useContext, useState,\n} from 'react';\nimport Select from 'react-select';\n\nimport AppProvider from '../services/context';\nimport { fetchMovies } from '../actions';\nimport MovieList from '../components/movie/MovieList';\n\nconst selectItems = [{\n  value: 'popular',\n  label: 'Popular',\n}, {\n  value: 'top_rated',\n  label: 'Top Rated',\n}, {\n  value: 'upcoming',\n  label: 'Upcoming',\n}, {\n  value: 'now_playing',\n  label: 'Now Playing',\n}];\n\nfunction Home() {\n  const { state: { movies }, dispatch } = useContext(AppProvider);\n  const [{ moviesFilter }, setLocalState] = useState({\n    moviesFilter: selectItems[0],\n  });\n\n  useEffect(() => {\n    dispatch(fetchMovies('popular'));\n  }, [dispatch]);\n\n  const onSelectChange = (data, e) => {\n    setLocalState((prevState) => ({ ...prevState, [e.name]: data }));\n    dispatch(fetchMovies(data.value));\n  };\n\n  return (\n    <>\n      <div className=\"row mb-3\">\n        <div className=\"col-12\">\n          <Select\n            name=\"moviesFilter\"\n            value={moviesFilter}\n            onChange={onSelectChange}\n            options={selectItems}\n          />\n        </div>\n      </div>\n      <MovieList movies={movies} />\n    </>\n  );\n}\n\nexport default Home;\n","const getCollection = (collection) => {\n  const parseCollection = JSON.parse(localStorage.getItem(collection)) || [];\n  return parseCollection;\n};\n\nconst getItem = (collection, id) => getCollection(collection).find((o) => o.id === id);\n\nconst setItem = (collection, id, props, replaceProp = false) => {\n  const parseCollection = getCollection(collection);\n  const findIndexItem = parseCollection.findIndex((o) => o.id === id);\n\n  if (findIndexItem === -1) {\n    parseCollection.push({ id, ...props });\n  } else {\n    parseCollection[findIndexItem] = replaceProp ? { id, ...props } : { ...parseCollection[findIndexItem], ...props };\n  }\n\n  localStorage.setItem(collection, JSON.stringify(parseCollection));\n};\n\nexport { getCollection, getItem, setItem };\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router';\n\nfunction Search({ history, fullWidth }) {\n  const [terms, setTerms] = useState('');\n\n  const onTermsChange = (e) => {\n    setTerms(e.target.value);\n  };\n\n  const onSearch = (e) => {\n    e.preventDefault();\n    history.push(`/search/${terms}`);\n  };\n\n  const shouldFullWidth = fullWidth ? { flex: 1 } : null;\n\n  return (\n    <form className=\"form-inline mt-2 mt-md-0\">\n      <input style={shouldFullWidth} className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" value={terms} onChange={onTermsChange} />\n      <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\" onClick={onSearch}>Search</button>\n    </form>\n  );\n}\n\nexport default withRouter(React.memo(Search));\n","import React, { useContext, useEffect, useMemo } from 'react';\n\nimport { getCollection } from '../../services/storage';\nimport AppProvider from '../../services/context';\nimport { fetchMoviesCollection } from '../../actions';\nimport MovieList from './MovieList';\nimport Search from '../Search';\n\nfunction MovieCollection({ collectionType }) {\n  const { state: { movies }, dispatch } = useContext(AppProvider);\n\n  const movieCollection = useMemo(() => getCollection('movies').filter(({ like, rating }) => {\n    if (collectionType === 'rating') {\n      return rating && rating !== '0';\n    }\n\n    if (collectionType === 'like') {\n      return like && like;\n    }\n\n    return false;\n  }), [collectionType]);\n\n  useEffect(() => {\n    if (movieCollection.length > 0) {\n      dispatch(fetchMoviesCollection(movieCollection));\n    }\n  }, [dispatch, movieCollection]);\n\n  const renderContent = () => {\n    if (movieCollection.length > 0) {\n      return (\n        <>\n          <div className=\"jumbotron\">\n            <h3 className=\"cover-heading text-center\">\n              Your\n              {' '}\n              {collectionType === 'rating' ? 'Rated' : 'Favorite'}\n              {' '}\n              Movies\n            </h3>\n          </div>\n          <MovieList movies={movies} />\n        </>\n      );\n    }\n    return (\n      <div className=\"jumbotron\">\n        <h3 className=\"cover-heading text-center\">\n          Sorry you have no\n          {' '}\n          {collectionType === 'rating' ? 'rated' : 'favorite'}\n          {' '}\n          movies. Search for a movie to add to your favorites.\n        </h3>\n        <Search fullWidth />\n      </div>\n    );\n  };\n\n  return (\n    <>\n      {renderContent()}\n    </>\n  );\n}\n\nexport default MovieCollection;\n","import React from 'react';\nimport MovieCollection from '../components/movie/MovieCollection';\n\nfunction Favorite() {\n  return <MovieCollection collectionType=\"like\" />;\n}\n\nexport default Favorite;\n","import React from 'react';\nimport MovieCollection from '../components/movie/MovieCollection';\n\nfunction Rate() {\n  return <MovieCollection collectionType=\"rating\" />;\n}\n\nexport default Rate;\n","import React from 'react';\n\nfunction About() {\n  return (\n    <div className=\"jumbotron\">\n      <h1 className=\"display-4\">MovieDB Searcher</h1>\n      <p className=\"lead\">This is a simple web-app that help you manage your favorite films</p>\n      <hr className=\"my-4\" />\n      <img className=\"logo\" src={`${process.env.PUBLIC_URL}/assets/image/movieDB-logo.png`} alt=\"Movie DB Logo\" />\n      <span>This product uses the TMDb API but is not endorsed or certified by TMDb.</span>\n    </div>\n  );\n}\n\nexport default About;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, {\n  useEffect, useContext, useState, useMemo,\n} from 'react';\nimport Select from 'react-select';\n\nimport MovieList from '../components/movie/MovieList';\nimport AppProvider from '../services/context';\nimport { fetchGenres, fetchDiscover } from '../actions';\n\nconst transformGenres = (data) => {\n  const transform = Array.isArray(data) ? data.map(({ value }) => value) : [];\n  return transform;\n};\n\nconst { years, yearLength } = (() => {\n  const yearsArray = [];\n  const currentYear = new Date().getFullYear();\n\n  for (let index = 1920; index <= currentYear; index++) {\n    yearsArray.push({ value: index, label: index });\n  }\n\n  return {\n    years: yearsArray,\n    yearLength: yearsArray.length,\n  };\n})();\n\nconst sortByList = [\n  { value: 'vote_average.desc', label: 'Ratings (Highest First)' },\n  { value: 'vote_average.asc', label: 'Ratings (Lowest First)' },\n  { value: 'primary_release_date.desc', label: 'Release Date (Latest First)' },\n  { value: 'primary_release_date.asc', label: 'Release Date (Oldest First)' },\n  { value: 'original_title.desc', label: 'Title (A to Z)' },\n  { value: 'original_title.asc', label: ' Title (Z to A)' },\n];\n\nfunction Discover() {\n  const { state: { movies, genres: genresList }, dispatch } = useContext(AppProvider);\n\n  const [{\n    fromYear, toYear, genres, sortBy,\n  }, setLocalState] = useState({\n    fromYear: years[0],\n    toYear: years[yearLength - 1],\n    genres: [],\n    sortBy: sortByList[0],\n  });\n\n  useEffect(() => {\n    dispatch(fetchGenres());\n    dispatch(fetchDiscover(fromYear.value, toYear.value, transformGenres(genres), sortBy.value));\n  }, [fromYear, toYear, genres, sortBy, dispatch]);\n\n  const genresGenerator = useMemo(() => {\n    const genresArray = genresList.map(({ id, name }) => ({ value: id, label: name }));\n    return genresArray;\n  }, [genresList]);\n\n\n  const onSelectChange = (data, e) => {\n    setLocalState((prevState) => ({ ...prevState, [e.name]: data }));\n  };\n\n  return (\n    <>\n      <div className=\"row mb-3\">\n        <div className=\"col-12\">\n          <h3 className=\"mb-3\">Discover Movies</h3>\n          <form>\n            <div className=\"form-group row\">\n              <label className=\"col-sm-2 col-form-label\">From Year</label>\n              <Select\n                className=\"col-sm-4\"\n                name=\"fromYear\"\n                value={fromYear}\n                onChange={onSelectChange}\n                options={years}\n              />\n              <label className=\"col-sm-2 col-form-label\">To Year</label>\n              <Select\n                className=\"col-sm-4\"\n                name=\"toYear\"\n                value={toYear}\n                onChange={onSelectChange}\n                options={years}\n              />\n            </div>\n            <div className=\"form-group row\">\n              <label className=\"col-sm-2 col-form-label\">Genres</label>\n              <Select\n                className=\"col-sm-10\"\n                name=\"genres\"\n                value={genres}\n                onChange={onSelectChange}\n                options={genresGenerator}\n                isMulti\n              />\n            </div>\n            <div className=\"form-group row\">\n              <label className=\"col-sm-2 col-form-label\">Sort By</label>\n              <Select\n                className=\"col-sm-10\"\n                name=\"sortBy\"\n                value={sortBy}\n                onChange={onSelectChange}\n                options={sortByList}\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n      <MovieList movies={movies} />\n    </>\n  );\n}\n\nexport default Discover;\n","import React, {\n  useEffect, useContext, useState, useMemo,\n} from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchMovie } from '../actions';\nimport AppProvider from '../services/context';\nimport { getItem, setItem } from '../services/storage';\n\nfunction MovieIndividual() {\n  const {\n    state: {\n      movie: {\n        id = 0,\n        poster_path = 'https://via.placeholder.com/800.png/343a40/fff',\n        title = '',\n        release_date = '',\n        overview = '',\n        vote_average = 0,\n      },\n    }, dispatch,\n  } = useContext(AppProvider);\n\n  const movieItem = useMemo(() => getItem('movies', id), [id]);\n\n  const initialLocalState = {\n    rating: movieItem ? movieItem.rating : '0',\n    like: movieItem ? movieItem.like : false,\n  };\n\n  const [{ rating, like }, setLocalState] = useState(initialLocalState);\n\n  useEffect(() => {\n    setLocalState(initialLocalState);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    dispatch(fetchMovie(movieId));\n  }, [dispatch, movieId]);\n\n  const onSelectChange = (e) => {\n    const { name, value } = e.target;\n    setLocalState((prevState) => ({ ...prevState, [name]: value }));\n\n    setItem('movies', id, { rating: value });\n  };\n\n  const onLike = () => {\n    setLocalState((prevState) => ({ ...prevState, like: !like }));\n    setItem('movies', id, { like: !like });\n  };\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card mb-4 shadow-sm\">\n        <img\n          src={`https://image.tmdb.org/t/p/original/${poster_path}`}\n          className=\"card-img-top\"\n          alt={title}\n        />\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{title}</h5>\n          <h6 className=\"card-subtitle mb-2 text-muted\">{release_date}</h6>\n          <p className=\"card-text\">{overview}</p>\n        </div>\n        <div className=\"card-footer text-muted text-center\">\n          <span>\n            Rate\n            {' '}\n            {vote_average}\n          </span>\n          <form className=\"form-inline justify-content-center\">\n            <label className=\"my-1 mr-2\" htmlFor=\"rating\">\n              My Ratings\n              <select className=\"custom-select ml-2 my-1 mr-sm-2\" name=\"rating\" id=\"rating\" value={rating} onChange={onSelectChange}>\n                <option value=\"0\">Not rated</option>\n                <option value=\"1\">★</option>\n                <option value=\"2\">★★</option>\n                <option value=\"3\">★★★</option>\n                <option value=\"4\">★★★★</option>\n                <option value=\"5\">★★★★★</option>\n              </select>\n            </label>\n            <button type=\"button\" className=\"btn btn-primary ml-2\" name=\"like\" onClick={onLike}>\n              {like ? 'Unlike' : 'Like'}\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MovieIndividual;\n","import React, { useContext, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport AppProvider from '../services/context';\nimport { searchTerms } from '../actions';\nimport MovieList from '../components/movie/MovieList';\n\nfunction SearchResult() {\n  const { state: { movies }, dispatch } = useContext(AppProvider);\n  const { terms } = useParams();\n\n  useEffect(() => {\n    dispatch(searchTerms(terms));\n  }, [dispatch, terms]);\n\n  return (\n    <>\n      <div className=\"row mb-3\">\n        <div className=\"col-12\">\n          <h1 className=\"display-5 text-center\">\n            Search &gt;\n            {' '}\n            {terms}\n          </h1>\n        </div>\n      </div>\n      <MovieList movies={movies} />\n    </>\n  );\n}\n\nexport default SearchResult;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Favorite from './pages/Favorite';\nimport Rate from './pages/Rate';\nimport About from './pages/About';\nimport Discover from './pages/Discover';\nimport MovieIndividual from './pages/MovieIndividual';\nimport SearchResult from './pages/SearchResult';\n\nfunction RouteApp() {\n  return (\n    <Switch>\n      <Route path=\"/favorite\" component={Favorite} />\n      <Route path=\"/rate\" component={Rate} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/discover\" component={Discover} />\n      <Route path=\"/movie/:movieId\" component={MovieIndividual} />\n      <Route path=\"/search/:terms\" component={SearchResult} />\n      <Route component={Home} />\n    </Switch>\n  );\n}\n\nexport default RouteApp;\n","import {\n  FETCH_MOVIES,\n  FETCH_MOVIE,\n  FETCH_GENRES,\n\n} from '../actions';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case FETCH_MOVIES:\n      return { ...state, movies: action.payload };\n    case FETCH_MOVIE:\n      return { ...state, movie: action.payload };\n    case FETCH_GENRES:\n      return { ...state, genres: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport clsx from 'clsx';\nimport { withRouter } from 'react-router';\n\nimport Search from './Search';\n\nconst linkItems = [\n  { link: '/', text: 'Home' },\n  { link: '/favorite', text: 'My Favorites' },\n  { link: '/rate', text: 'My Rates' },\n  { link: '/discover', text: 'Discover' },\n  { link: '/about', text: 'About' },\n];\n\nfunction Header({ location: { pathname } }) {\n  const renderLinkItems = () => linkItems.map(({ link, text }) => (\n    <li className={`nav-item ${clsx(pathname === link && 'active')}`} key={link}>\n      <Link className=\"nav-link\" to={link}>{text}</Link>\n    </li>\n  ));\n\n  return (\n    <header>\n      <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n        <Link className=\"navbar-brand\" to=\"/\">MovieDB Searcher</Link>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n          <ul className=\"navbar-nav mr-auto\">\n            {renderLinkItems()}\n          </ul>\n          <Search />\n        </div>\n      </nav>\n    </header>\n  );\n}\n\nexport default withRouter(React.memo(Header));\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"container\">\n      <p className=\"float-right\">\n        <a href=\"#\">Back to top</a>\n      </p>\n      <p>\n&copy; 2019 - Tai Do - For educational purpose only &middot;\n      </p>\n    </footer>\n  );\n}\n\nexport default React.memo(Footer);\n","import { useCallback, useRef, useState } from 'react';\n\nfunction useThunkReducer(reducer, initialArg, init = (a) => a) {\n  const [hookState, setHookState] = useState(init(initialArg));\n\n  const state = useRef(hookState);\n  const getState = useCallback(() => state.current, [state]);\n  const setState = useCallback((newState) => {\n    state.current = newState;\n    setHookState(newState);\n  }, [state, setHookState]);\n\n  const reduce = useCallback((action) => reducer(getState(), action), [reducer, getState]);\n\n  const dispatch = useCallback((action) => (typeof action === 'function'\n    ? action(dispatch, getState)\n    : setState(reduce(action))), [getState, setState, reduce]);\n\n  return [hookState, dispatch];\n}\n\nexport default useThunkReducer;\n","import React from 'react';\n\nimport RouteApp from './routes';\nimport AppProvider from './services/context';\nimport reducer from './reducers';\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport useThunkReducer from './services/thunk';\n\nconst initialState = {\n  movies: [],\n  movie: {},\n  genres: [],\n};\n\nfunction App() {\n  const [state, dispatch] = useThunkReducer(reducer, initialState);\n\n  return (\n    <>\n      <AppProvider.Provider value={{ state, dispatch }}>\n        <Header />\n        <main>\n          <div className=\"container\">\n            <RouteApp />\n          </div>\n        </main>\n        <Footer />\n      </AppProvider.Provider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './assets/scss/index.scss';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}