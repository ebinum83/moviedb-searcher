{"version":3,"sources":["services/context.js","services/api.js","keys.js","actions/index.js","components/movie/Movie.js","components/movie/MovieList.js","pages/Home.js","services/storage.js","components/Search.js","components/movie/MovieCollection.js","pages/Favorite.js","pages/Rate.js","pages/About.js","pages/Discover.js","pages/MovieIndividual.js","pages/SearchResult.js","routes.js","reducers/index.js","components/Header.js","components/Footer.js","services/thunk.js","App.js","serviceWorker.js","index.js"],"names":["React","api","a","baseURL","config","api_key","fetchMovies","listType","ref","payload","dateMovieA","moment","movieA","movieB","dateMovieB","dispatch","type","id","title","overview","poster_path","release_date","vote_average","className","src","alt","to","memo","movies","renderMovies","useCallback","props","key","selectItems","value","label","useContext","useState","moviesFilter","setLocalState","useEffect","name","onChange","data","e","options","getCollection","collection","JSON","localStorage","setItem","replaceProp","parseCollection","findIndexItem","o","withRouter","history","fullWidth","terms","setTerms","shouldFullWidth","flex","style","placeholder","aria-label","onClick","collectionType","movieCollection","useMemo","like","rating","moviesCollection","Promise","allRefs","process","yearsArray","currentYear","Date","index","years","yearLength","length","sortByList","genresList","fromYear","toYear","genres","sortBy","params","sort_by","with_genres","paramsStringify","arrayFormat","fetchDiscover","Array","genresGenerator","onSelectChange","isMulti","movieItem","getItem","initialLocalState","movieId","useParams","fetchMovie","htmlFor","searchTerms","path","component","Favorite","Rate","About","Discover","MovieIndividual","SearchResult","Home","action","movie","state","linkItems","link","text","pathname","location","data-toggle","data-target","aria-controls","aria-expanded","clsx","href","reducer","init","hookState","setHookState","useRef","getState","setState","reduce","initialState","useThunkReducer","Boolean","window","ReactDOM","document","navigator","registration"],"mappings":"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","file":"static/js/main.ae847976.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst AppProvider = React.createContext();\r\n\r\nexport default AppProvider;\r\n","import axios from 'axios';\r\n\r\nimport { baseURL, secret } from '../keys';\r\n\r\nconst api = axios.create({\r\n  baseURL,\r\n});\r\n\r\napi.interceptors.request.use((config) => {\r\n  config.params = {\r\n    ...config.params,\r\n    api_key: secret,\r\n  };\r\n  return config;\r\n});\r\n\r\nexport default api;\r\n","const baseURL = 'https://api.themoviedb.org/3';\r\nconst secret = '85bf4579c13b19c5d1ae95ec26bd38b5'; //\r\nconst maxResult = 50;\r\n\r\nexport { baseURL, secret, maxResult };\r\n","import qs from 'qs';\r\nimport moment from 'moment';\r\n\r\nimport api from '../services/api';\r\nimport { maxResult } from '../keys';\r\n\r\nconst FETCH_MOVIES = 'FETCH_MOVIES';\r\nconst FETCH_MOVIE = 'FETCH_MOVIE';\r\nconst FETCH_GENRES = 'FETCH_GENRES';\r\n\r\nconst fetchMovies = (listType) => async (dispatch) => {\r\n  const ref = (await api.get(`/movie/${listType}`)).data.results;\r\n\r\n  const payload = ref.sort((movieA, movieB) => {\r\n    const dateMovieA = moment(movieA.release_date);\r\n    const dateMovieB = moment(movieB.release_date);\r\n\r\n    return dateMovieB.diff(dateMovieA);\r\n  }).slice(0, maxResult);\r\n\r\n  dispatch({\r\n    type: FETCH_MOVIES,\r\n    payload,\r\n  });\r\n};\r\n\r\nconst fetchMovie = (movieId) => async (dispatch) => {\r\n  const ref = (await api.get(`/movie/${movieId}`)).data;\r\n\r\n  dispatch({\r\n    type: FETCH_MOVIE,\r\n    payload: ref,\r\n  });\r\n};\r\n\r\nconst fetchMoviesCollection = (moviesCollection) => async (dispatch) => {\r\n  const allRefs = await Promise.all(moviesCollection.map(async ({ id }) => {\r\n    const ref = (await api.get(`/movie/${id}`)).data;\r\n    return ref;\r\n  }));\r\n\r\n  dispatch({\r\n    type: FETCH_MOVIES,\r\n    payload: allRefs,\r\n  });\r\n};\r\n\r\nconst fetchGenres = () => async (dispatch) => {\r\n  const ref = (await api.get('/genre/movie/list')).data.genres;\r\n\r\n  dispatch({\r\n    type: FETCH_GENRES,\r\n    payload: ref,\r\n  });\r\n};\r\n\r\nconst fetchDiscover = (fromYear, toYear, genres, sortBy) => async (dispatch) => {\r\n  const params = {\r\n    'primary_release_date.gte': `${fromYear}-01-01`,\r\n    'primary_release_date.lte': `${toYear}-12-31`,\r\n    sort_by: sortBy,\r\n    ...(genres.length > 0 && { with_genres: genres }),\r\n  };\r\n\r\n  const paramsStringify = qs.stringify(params, { arrayFormat: 'comma' });\r\n\r\n  const ref = (await api.get(`/discover/movie?${paramsStringify}`)).data.results.slice(0, maxResult);\r\n\r\n  dispatch({\r\n    type: FETCH_MOVIES,\r\n    payload: ref,\r\n  });\r\n};\r\n\r\nconst searchTerms = (terms) => async (dispatch) => {\r\n  const ref = (await api.get(`/search/movie?query=${terms}`)).data.results;\r\n\r\n  dispatch({\r\n    type: FETCH_MOVIES,\r\n    payload: ref,\r\n  });\r\n};\r\n\r\nexport {\r\n  fetchMovies,\r\n  fetchMovie,\r\n  fetchMoviesCollection,\r\n  fetchGenres,\r\n  fetchDiscover,\r\n  searchTerms,\r\n  FETCH_MOVIES,\r\n  FETCH_MOVIE,\r\n  FETCH_GENRES,\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Movie({\r\n  id, title, overview, poster_path, release_date, vote_average,\r\n}) {\r\n  return (\r\n    <div className=\"col-md-6 col-lg-4\">\r\n      <div className=\"card mb-4 shadow-sm\">\r\n        <img\r\n          src={poster_path ? `https://image.tmdb.org/t/p/w500/${poster_path}` : 'https://via.placeholder.com/500.png/343a40/fff'}\r\n          className=\"card-img-top poster\"\r\n          alt={title}\r\n        />\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{title}</h5>\r\n          <h6 className=\"card-subtitle mb-2 text-muted\">{release_date}</h6>\r\n          <p className=\"card-text\">\r\n            {overview.substring(0, 100)}\r\n              ...\r\n          </p>\r\n          <Link className=\"btn btn-primary\" to={`/movie/${id}`}>More Info</Link>\r\n        </div>\r\n        <div className=\"card-footer text-muted\">\r\n          <span>\r\n            Rate\r\n            {' '}\r\n            {vote_average}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Movie;\r\n","import React, { memo, useCallback } from 'react';\r\nimport Movie from './Movie';\r\n\r\nfunction MovieList({ movies }) {\r\n  const renderMovies = useCallback(\r\n    () => movies.map(({ id, ...props }) => (\r\n      <Movie key={id} id={id} {...props} />\r\n    )),\r\n    [movies],\r\n  );\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {renderMovies()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(MovieList);\r\n","import React, {\r\n  useEffect, useContext, useState,\r\n} from 'react';\r\nimport Select from 'react-select';\r\n\r\nimport AppProvider from '../services/context';\r\nimport { fetchMovies } from '../actions';\r\nimport MovieList from '../components/movie/MovieList';\r\n\r\nconst selectItems = [{\r\n  value: 'popular',\r\n  label: 'Popular',\r\n}, {\r\n  value: 'top_rated',\r\n  label: 'Top Rated',\r\n}, {\r\n  value: 'upcoming',\r\n  label: 'Upcoming',\r\n}, {\r\n  value: 'now_playing',\r\n  label: 'Now Playing',\r\n}];\r\n\r\nfunction Home() {\r\n  const { state: { movies }, dispatch } = useContext(AppProvider);\r\n  const [{ moviesFilter }, setLocalState] = useState({\r\n    moviesFilter: selectItems[0],\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchMovies('popular'));\r\n  }, [dispatch]);\r\n\r\n  const onSelectChange = (data, e) => {\r\n    setLocalState((prevState) => ({ ...prevState, [e.name]: data }));\r\n    dispatch(fetchMovies(data.value));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row mb-3\">\r\n        <div className=\"col-12\">\r\n          <Select\r\n            name=\"moviesFilter\"\r\n            value={moviesFilter}\r\n            onChange={onSelectChange}\r\n            options={selectItems}\r\n          />\r\n        </div>\r\n      </div>\r\n      <MovieList movies={movies} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","const getCollection = (collection) => {\r\n  const parseCollection = JSON.parse(localStorage.getItem(collection)) || [];\r\n  return parseCollection;\r\n};\r\n\r\nconst getItem = (collection, id) => getCollection(collection).find((o) => o.id === id);\r\n\r\nconst setItem = (collection, id, props, replaceProp = false) => {\r\n  const parseCollection = getCollection(collection);\r\n  const findIndexItem = parseCollection.findIndex((o) => o.id === id);\r\n\r\n  if (findIndexItem === -1) {\r\n    parseCollection.push({ id, ...props });\r\n  } else {\r\n    parseCollection[findIndexItem] = replaceProp ? { id, ...props } : { ...parseCollection[findIndexItem], ...props };\r\n  }\r\n\r\n  localStorage.setItem(collection, JSON.stringify(parseCollection));\r\n};\r\n\r\nexport { getCollection, getItem, setItem };\r\n","import React, { useState } from 'react';\r\nimport { withRouter } from 'react-router';\r\n\r\nfunction Search({ history, fullWidth }) {\r\n  const [terms, setTerms] = useState('');\r\n\r\n  const onTermsChange = (e) => {\r\n    setTerms(e.target.value);\r\n  };\r\n\r\n  const onSearch = (e) => {\r\n    e.preventDefault();\r\n    history.push(`/search/${terms}`);\r\n  };\r\n\r\n  const shouldFullWidth = fullWidth ? { flex: 1 } : null;\r\n\r\n  return (\r\n    <form className=\"form-inline mt-2 mt-md-0\">\r\n      <input style={shouldFullWidth} className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" value={terms} onChange={onTermsChange} />\r\n      <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\" onClick={onSearch}>Search</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default withRouter(React.memo(Search));\r\n","import React, { useContext, useEffect, useMemo } from 'react';\r\n\r\nimport { getCollection } from '../../services/storage';\r\nimport AppProvider from '../../services/context';\r\nimport { fetchMoviesCollection } from '../../actions';\r\nimport MovieList from './MovieList';\r\nimport Search from '../Search';\r\n\r\nfunction MovieCollection({ collectionType }) {\r\n  const { state: { movies }, dispatch } = useContext(AppProvider);\r\n\r\n  const movieCollection = useMemo(() => getCollection('movies').filter(({ like, rating }) => {\r\n    if (collectionType === 'rating') {\r\n      return rating && rating !== '0';\r\n    }\r\n\r\n    if (collectionType === 'like') {\r\n      return like && like;\r\n    }\r\n\r\n    return false;\r\n  }), [collectionType]);\r\n\r\n  useEffect(() => {\r\n    if (movieCollection.length > 0) {\r\n      dispatch(fetchMoviesCollection(movieCollection));\r\n    }\r\n  }, [dispatch, movieCollection]);\r\n\r\n  const renderContent = () => {\r\n    if (movieCollection.length > 0) {\r\n      return (\r\n        <>\r\n          <div className=\"jumbotron\">\r\n            <h3 className=\"cover-heading text-center\">\r\n              Your\r\n              {' '}\r\n              {collectionType === 'rating' ? 'Rated' : 'Favorite'}\r\n              {' '}\r\n              Movies\r\n            </h3>\r\n          </div>\r\n          <MovieList movies={movies} />\r\n        </>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"jumbotron\">\r\n        <h3 className=\"cover-heading text-center\">\r\n          Sorry you have no\r\n          {' '}\r\n          {collectionType === 'rating' ? 'rated' : 'favorite'}\r\n          {' '}\r\n          movies. Search for a movie to add to your favorites.\r\n        </h3>\r\n        <Search fullWidth />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {renderContent()}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MovieCollection;\r\n","import React from 'react';\r\nimport MovieCollection from '../components/movie/MovieCollection';\r\n\r\nfunction Favorite() {\r\n  return <MovieCollection collectionType=\"like\" />;\r\n}\r\n\r\nexport default Favorite;\r\n","import React from 'react';\r\nimport MovieCollection from '../components/movie/MovieCollection';\r\n\r\nfunction Rate() {\r\n  return <MovieCollection collectionType=\"rating\" />;\r\n}\r\n\r\nexport default Rate;\r\n","import React from 'react';\r\n\r\nfunction About() {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <h1 className=\"display-4\">MovieDB Searcher</h1>\r\n      <p className=\"lead\">This is a simple web-app that help you manage your favorite films</p>\r\n      <hr className=\"my-4\" />\r\n      <img className=\"logo\" src={`${process.env.PUBLIC_URL}/assets/image/movieDB-logo.png`} alt=\"Movie DB Logo\" />\r\n      <span>This product uses the TMDb API but is not endorsed or certified by TMDb.</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport React, {\r\n  useEffect, useContext, useState, useMemo,\r\n} from 'react';\r\nimport Select from 'react-select';\r\n\r\nimport MovieList from '../components/movie/MovieList';\r\nimport AppProvider from '../services/context';\r\nimport { fetchGenres, fetchDiscover } from '../actions';\r\n\r\nconst transformGenres = (data) => {\r\n  const transform = Array.isArray(data) ? data.map(({ value }) => value) : [];\r\n  return transform;\r\n};\r\n\r\nconst { years, yearLength } = (() => {\r\n  const yearsArray = [];\r\n  const currentYear = new Date().getFullYear();\r\n\r\n  for (let index = 1920; index <= currentYear; index++) {\r\n    yearsArray.push({ value: index, label: index });\r\n  }\r\n\r\n  return {\r\n    years: yearsArray,\r\n    yearLength: yearsArray.length,\r\n  };\r\n})();\r\n\r\nconst sortByList = [\r\n  { value: 'vote_average.desc', label: 'Ratings (Highest First)' },\r\n  { value: 'vote_average.asc', label: 'Ratings (Lowest First)' },\r\n  { value: 'primary_release_date.desc', label: 'Release Date (Latest First)' },\r\n  { value: 'primary_release_date.asc', label: 'Release Date (Oldest First)' },\r\n  { value: 'original_title.desc', label: 'Title (A to Z)' },\r\n  { value: 'original_title.asc', label: ' Title (Z to A)' },\r\n];\r\n\r\nfunction Discover() {\r\n  const { state: { movies, genres: genresList }, dispatch } = useContext(AppProvider);\r\n\r\n  const [{\r\n    fromYear, toYear, genres, sortBy,\r\n  }, setLocalState] = useState({\r\n    fromYear: years[0],\r\n    toYear: years[yearLength - 1],\r\n    genres: [],\r\n    sortBy: sortByList[0],\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchGenres());\r\n    dispatch(fetchDiscover(fromYear.value, toYear.value, transformGenres(genres), sortBy.value));\r\n  }, [fromYear, toYear, genres, sortBy, dispatch]);\r\n\r\n  const genresGenerator = useMemo(() => {\r\n    const genresArray = genresList.map(({ id, name }) => ({ value: id, label: name }));\r\n    return genresArray;\r\n  }, [genresList]);\r\n\r\n\r\n  const onSelectChange = (data, e) => {\r\n    setLocalState((prevState) => ({ ...prevState, [e.name]: data }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row mb-3\">\r\n        <div className=\"col-12\">\r\n          <h3 className=\"mb-3\">Discover Movies</h3>\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-2 col-form-label\">From Year</label>\r\n              <Select\r\n                className=\"col-sm-4\"\r\n                name=\"fromYear\"\r\n                value={fromYear}\r\n                onChange={onSelectChange}\r\n                options={years}\r\n              />\r\n              <label className=\"col-sm-2 col-form-label\">To Year</label>\r\n              <Select\r\n                className=\"col-sm-4\"\r\n                name=\"toYear\"\r\n                value={toYear}\r\n                onChange={onSelectChange}\r\n                options={years}\r\n              />\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-2 col-form-label\">Genres</label>\r\n              <Select\r\n                className=\"col-sm-10\"\r\n                name=\"genres\"\r\n                value={genres}\r\n                onChange={onSelectChange}\r\n                options={genresGenerator}\r\n                isMulti\r\n              />\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-2 col-form-label\">Sort By</label>\r\n              <Select\r\n                className=\"col-sm-10\"\r\n                name=\"sortBy\"\r\n                value={sortBy}\r\n                onChange={onSelectChange}\r\n                options={sortByList}\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <MovieList movies={movies} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Discover;\r\n","import React, {\r\n  useEffect, useContext, useState, useMemo,\r\n} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { fetchMovie } from '../actions';\r\nimport AppProvider from '../services/context';\r\nimport { getItem, setItem } from '../services/storage';\r\n\r\nfunction MovieIndividual() {\r\n  const {\r\n    state: {\r\n      movie: {\r\n        id = 0,\r\n        poster_path = 'https://via.placeholder.com/800.png/343a40/fff',\r\n        title = '',\r\n        release_date = '',\r\n        overview = '',\r\n        vote_average = 0,\r\n      },\r\n    }, dispatch,\r\n  } = useContext(AppProvider);\r\n\r\n  const movieItem = useMemo(() => getItem('movies', id), [id]);\r\n\r\n  const initialLocalState = {\r\n    rating: movieItem ? movieItem.rating : '0',\r\n    like: movieItem ? movieItem.like : false,\r\n  };\r\n\r\n  const [{ rating, like }, setLocalState] = useState(initialLocalState);\r\n\r\n  useEffect(() => {\r\n    setLocalState(initialLocalState);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  const { movieId } = useParams();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchMovie(movieId));\r\n  }, [dispatch, movieId]);\r\n\r\n  const onSelectChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setLocalState((prevState) => ({ ...prevState, [name]: value }));\r\n\r\n    setItem('movies', id, { rating: value });\r\n  };\r\n\r\n  const onLike = () => {\r\n    setLocalState((prevState) => ({ ...prevState, like: !like }));\r\n    setItem('movies', id, { like: !like });\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <div className=\"card mb-4 shadow-sm\">\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/original/${poster_path}`}\r\n          className=\"card-img-top\"\r\n          alt={title}\r\n        />\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{title}</h5>\r\n          <h6 className=\"card-subtitle mb-2 text-muted\">{release_date}</h6>\r\n          <p className=\"card-text\">{overview}</p>\r\n        </div>\r\n        <div className=\"card-footer text-muted text-center\">\r\n          <span>\r\n            Rate\r\n            {' '}\r\n            {vote_average}\r\n          </span>\r\n          <form className=\"form-inline justify-content-center\">\r\n            <label className=\"my-1 mr-2\" htmlFor=\"rating\">\r\n              My Ratings\r\n              <select className=\"custom-select ml-2 my-1 mr-sm-2\" name=\"rating\" id=\"rating\" value={rating} onChange={onSelectChange}>\r\n                <option value=\"0\">Not rated</option>\r\n                <option value=\"1\">★</option>\r\n                <option value=\"2\">★★</option>\r\n                <option value=\"3\">★★★</option>\r\n                <option value=\"4\">★★★★</option>\r\n                <option value=\"5\">★★★★★</option>\r\n              </select>\r\n            </label>\r\n            <button type=\"button\" className=\"btn btn-primary ml-2\" name=\"like\" onClick={onLike}>\r\n              {like ? 'Unlike' : 'Like'}\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieIndividual;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport AppProvider from '../services/context';\r\nimport { searchTerms } from '../actions';\r\nimport MovieList from '../components/movie/MovieList';\r\n\r\nfunction SearchResult() {\r\n  const { state: { movies }, dispatch } = useContext(AppProvider);\r\n  const { terms } = useParams();\r\n\r\n  useEffect(() => {\r\n    dispatch(searchTerms(terms));\r\n  }, [dispatch, terms]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row mb-3\">\r\n        <div className=\"col-12\">\r\n          <h1 className=\"display-5 text-center\">\r\n            Search &gt;\r\n            {' '}\r\n            {terms}\r\n          </h1>\r\n        </div>\r\n      </div>\r\n      <MovieList movies={movies} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchResult;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport Favorite from './pages/Favorite';\r\nimport Rate from './pages/Rate';\r\nimport About from './pages/About';\r\nimport Discover from './pages/Discover';\r\nimport MovieIndividual from './pages/MovieIndividual';\r\nimport SearchResult from './pages/SearchResult';\r\n\r\nfunction RouteApp() {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/favorite\" component={Favorite} />\r\n      <Route path=\"/rate\" component={Rate} />\r\n      <Route path=\"/about\" component={About} />\r\n      <Route path=\"/discover\" component={Discover} />\r\n      <Route path=\"/movie/:movieId\" component={MovieIndividual} />\r\n      <Route path=\"/search/:terms\" component={SearchResult} />\r\n      <Route component={Home} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default RouteApp;\r\n","import {\r\n  FETCH_MOVIES,\r\n  FETCH_MOVIE,\r\n  FETCH_GENRES,\r\n\r\n} from '../actions';\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case FETCH_MOVIES:\r\n      return { ...state, movies: action.payload };\r\n    case FETCH_MOVIE:\r\n      return { ...state, movie: action.payload };\r\n    case FETCH_GENRES:\r\n      return { ...state, genres: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport { withRouter } from 'react-router';\r\n\r\nimport Search from './Search';\r\n\r\nconst linkItems = [\r\n  { link: '/', text: 'Home' },\r\n  { link: '/favorite', text: 'My Favorites' },\r\n  { link: '/rate', text: 'My Rates' },\r\n  { link: '/discover', text: 'Discover' },\r\n  { link: '/about', text: 'About' },\r\n];\r\n\r\nfunction Header({ location: { pathname } }) {\r\n  const renderLinkItems = () => linkItems.map(({ link, text }) => (\r\n    <li className={`nav-item ${clsx(pathname === link && 'active')}`} key={link}>\r\n      <Link className=\"nav-link\" to={link}>{text}</Link>\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <header>\r\n      <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\r\n        <Link className=\"navbar-brand\" to=\"/\">MovieDB Searcher</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            {renderLinkItems()}\r\n          </ul>\r\n          <Search />\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default withRouter(React.memo(Header));\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"container\">\r\n      <p className=\"float-right\">\r\n        <a href=\"#\">Back to top</a>\r\n      </p>\r\n      <p>\r\n\t\tMade with ❤️ and 🍺 by Daryl Ebinum&copy; 2021\r\n      </p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default React.memo(Footer);\r\n","import { useCallback, useRef, useState } from 'react';\r\n\r\nfunction useThunkReducer(reducer, initialArg, init = (a) => a) {\r\n  const [hookState, setHookState] = useState(init(initialArg));\r\n\r\n  const state = useRef(hookState);\r\n  const getState = useCallback(() => state.current, [state]);\r\n  const setState = useCallback((newState) => {\r\n    state.current = newState;\r\n    setHookState(newState);\r\n  }, [state, setHookState]);\r\n\r\n  const reduce = useCallback((action) => reducer(getState(), action), [reducer, getState]);\r\n\r\n  const dispatch = useCallback((action) => (typeof action === 'function'\r\n    ? action(dispatch, getState)\r\n    : setState(reduce(action))), [getState, setState, reduce]);\r\n\r\n  return [hookState, dispatch];\r\n}\r\n\r\nexport default useThunkReducer;\r\n","import React from 'react';\r\n\r\nimport RouteApp from './routes';\r\nimport AppProvider from './services/context';\r\nimport reducer from './reducers';\r\n\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport useThunkReducer from './services/thunk';\r\n\r\nconst initialState = {\r\n  movies: [],\r\n  movie: {},\r\n  genres: [],\r\n};\r\n\r\nfunction App() {\r\n  const [state, dispatch] = useThunkReducer(reducer, initialState);\r\n\r\n  return (\r\n    <>\r\n      <AppProvider.Provider value={{ state, dispatch }}>\r\n        <Header />\r\n        <main>\r\n          <div className=\"container\">\r\n            <RouteApp />\r\n          </div>\r\n        </main>\r\n        <Footer />\r\n      </AppProvider.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './assets/scss/index.scss';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}